name: CI Emulated
on:
  workflow_call:
jobs:
  Linux:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        platform: ['linux/s390x']
        version: ['8.1', '8.2', '8.3', '8.4']
        type: ['cli', 'zts']
        distro: ['trixie', 'alpine']
    steps:
        - name: Checkout
          uses: actions/checkout@v5
          with:
            submodules: true
        - name: Setup QEMU
          uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
          with:
            platforms: "s390x"
            cache-image: false
        - name: Setup Docker layer caching
          uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
          with:
            driver-opts: |
              image=moby/buildkit:latest
            buildkitd-flags: --debug
        - name: Login to GitHub Container Registry
          if: github.event_name != 'pull_request'
          uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Pull PHP container image
          run: |
            docker pull --platform "${{ matrix.platform }}" "php:${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}"
        - name: Cut arch name
          id: cut-arch
          run: echo "arch=$(echo "${{ matrix.platform }}" | sed 's|linux/||')" >> $GITHUB_OUTPUT
        - name: Build and cache container
          uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
          env:
            DOCKER_BUILD_SUMMARY: false
          with:
            context: .
            platforms: ${{ matrix.platform }}
            build-args: |
              PLATFORM=${{ matrix.platform }}
              IMAGE=php
              TAG=${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}
            tags: |
              shell
              ghcr.io/${{ github.repository }}/ci-emulated:${{ steps.cut-arch.outputs.arch }}-${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}-${{ hashFiles('**/Dockerfile', '**/compose.yaml', '**/pskel.sh') }}
            cache-from: |
              type=registry,ref=ghcr.io/${{ github.repository }}/ci-emulated:buildcache-${{ steps.cut-arch.outputs.arch }}-${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}
            cache-to: |
              type=registry,ref=ghcr.io/${{ github.repository }}/ci-emulated:buildcache-${{ steps.cut-arch.outputs.arch }}-${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }},mode=max
            push: false
            load: true
        - name: Test extension with Bundled PHP
          run: docker compose run --rm shell pskel test
