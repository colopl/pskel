name: Coverage
permissions:
  contents: write
  pull-requests: write
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ['8.3']
        type: ['cli', 'zts']
        distro: ['bookworm']
    outputs:
      matrix: ${{ toJson(matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64,s390x"
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Build container
        run: |
          docker compose build --pull --no-cache --build-arg PLATFORM="linux/amd64" --build-arg IMAGE="php" --build-arg TAG="${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}"
      - name: Test with gcov
        run: |
          docker compose run -v "$(pwd)/ext:/ext" --rm shell /bin/sh -c 'pskel test gcov && lcov --capture --directory "/ext" --output-file "/ext/lcov.info" --exclude "/usr/local/include/*" --exclude "third_party/*" && lcov --list "/ext/lcov.info"'
      - name: Upload coverage to artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.version }}-${{ matrix.type }}-${{ matrix.distro }}
          path: ${{ github.workspace }}/ext/lcov.info
  Coverage:
    needs: [Linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
      - name: Merge coverages
        run: |
          sudo apt-get install -y "lcov"
          LCOV_FILES="$(find . -name "lcov.info")"
          CMD="$(which "lcov")"
          for LCOV_FILE in ${LCOV_FILES}; do
            CMD+=" -a ${LCOV_FILE}"
          done
          CMD+=" -o lcov.info"
          echo "Merging coverages: ${LCOV_FILES}"
          ${CMD}
      - name: Report coverage
        uses: k1LoW/octocov-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          config: .github/octocov.yml
      - name: Upload coverage to artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unified
          path: ${{ github.workspace }}/lcov.info
  PullRequestComment:
    needs: [Coverage]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-unified
      - name: Get changed files
        uses: tj-actions/changed-files@v45
        id: changed-files
      - name: Install lcov-parse
        run: npm install "lcov-parse"
      - name: Report comment for PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const lcovParse = require('lcov-parse');

            const lcovFile = fs.readFileSync('./lcov.info', 'utf8');

            lcovParse(lcovFile, async (err, data) => {
              if (err) {
                console.error('Error parsing lcov file:', err);
                return;
              }

              const { data: diff } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                mediaType: {
                  format: 'diff'
                }
              });

              const lines = diff.split('\n');
              let currentFile = '';
              let lineNumber = 0;

              for (const line of lines) {
                if (line.startsWith('+++')) {
                  currentFile = line.substring(6);
                  lineNumber = 0;
                } else if (line.startsWith('@@')) {
                  const match = line.match(/@@ -\d+,\d+ \+(\d+),/);
                  if (match) {
                    lineNumber = parseInt(match[1]) - 1;
                  }
                } else if (line.startsWith('+') && !line.startsWith('+++')) {
                  lineNumber++;
                  const fileData = data.find(f => f.file === currentFile);
                  if (fileData) {
                    const lineData = fileData.lines.details.find(l => l.line === lineNumber);
                    if (lineData && lineData.hit === 0) {
                      await github.rest.pulls.createReviewComment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        pull_number: context.issue.number,
                        body: 'This line is not covered by tests.',
                        commit_id: context.payload.pull_request.head.sha,
                        path: currentFile,
                        line: lineNumber
                      });
                    }
                  }
                } else if (!line.startsWith('-')) {
                  lineNumber++;
                }
              }
            });
